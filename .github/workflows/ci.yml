name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable, beta]
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y librocksdb-dev libzstd-dev clang
    
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install rocksdb zstd
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check code formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Build
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          export ROCKSDB_LIB_DIR=/usr/lib
        else
          export ROCKSDB_LIB_DIR=/opt/homebrew/lib
        fi
        export LIBROCKSDB_SYS_DISABLE_BUNDLED=1
        cargo build --verbose
    
    - name: Run tests
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          export ROCKSDB_LIB_DIR=/usr/lib
        else
          export ROCKSDB_LIB_DIR=/opt/homebrew/lib
        fi
        export LIBROCKSDB_SYS_DISABLE_BUNDLED=1
        cargo test --verbose
    
    - name: Run doc tests
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          export ROCKSDB_LIB_DIR=/usr/lib
        else
          export ROCKSDB_LIB_DIR=/opt/homebrew/lib
        fi
        export LIBROCKSDB_SYS_DISABLE_BUNDLED=1
        cargo test --doc

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Run cargo audit
      uses: actions-rs/audit-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y librocksdb-dev libzstd-dev clang
    
    - name: Install tarpaulin
      run: cargo install cargo-tarpaulin
    
    - name: Generate code coverage
      run: |
        export ROCKSDB_LIB_DIR=/usr/lib
        export LIBROCKSDB_SYS_DISABLE_BUNDLED=1
        cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false